import sqlite3

conn = sqlite3.connect("ecommerce.db")
cursor = conn.cursor()

# Create users table
cursor.execute("""
CREATE TABLE IF NOT EXISTS users (
    id INTEGER PRIMARY KEY,
    name TEXT,
    email TEXT
)
""")

# Create orders table
cursor.execute("""
CREATE TABLE IF NOT EXISTS orders (
    id INTEGER PRIMARY KEY,
    user_id INTEGER,
    amount REAL,
    date TEXT,
    FOREIGN KEY(user_id) REFERENCES users(id)
)
""")

# Create products table
cursor.execute("""
CREATE TABLE IF NOT EXISTS products (
    id INTEGER PRIMARY KEY,
    name TEXT,
    price REAL
)
""")

conn.commit()
conn.close()
print("Database and tables initialized.")
# import cx_Oracle

# dsn = cx_Oracle.makedsn("localhost", 1521, service_name="XEPDB1")
# conn = cx_Oracle.connect(user="your_username", password="your_password", dsn=dsn)
# cursor = conn.cursor()

# cursor.execute("""
# CREATE TABLE users (
#     id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
#     name VARCHAR2(100),
#     email VARCHAR2(100)
# )
# """)

# cursor.execute("""
# CREATE TABLE products (
#     id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
#     name VARCHAR2(100),
#     price NUMBER
# )
# """)

# cursor.execute("""
# CREATE TABLE orders (
#     id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
#     user_id NUMBER,
#     amount NUMBER,
#     date DATE,
#     FOREIGN KEY (user_id) REFERENCES users(id)
# )
# """)

# conn.commit()
# cursor.close()
# conn.close()


# from db_config import get_connection

# def init_tables():
#     conn = get_connection()
#     cursor = conn.cursor()

#     cursor.execute("""
#     CREATE TABLE users (
#         id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
#         name VARCHAR2(100),
#         email VARCHAR2(100)
#     )
#     """)

#     cursor.execute("""
#     CREATE TABLE products (
#         id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
#         name VARCHAR2(100),
#         price NUMBER
#     )
#     """)

#     cursor.execute("""
#     CREATE TABLE orders (
#         id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
#         user_id NUMBER,
#         amount NUMBER,
#         date DATE,
#         FOREIGN KEY (user_id) REFERENCES users(id)
#     )
#     """)

#     conn.commit()
#     cursor.close()
#     conn.close()
#     print("Tables created.")

# def insert_data():
#     conn = get_connection()
#     cursor = conn.cursor()

#     users = [
#         ("Alice Johnson", "alice@example.com"),
#         ("Bob Smith", "bob@example.com"),
#         ("Carol Williams", "carol@example.com"),
#         ("Dave Thompson", "dave@example.com"),
#         ("Eve Anderson", "eve@example.com")
#     ]

#     for user in users:
#         cursor.execute("INSERT INTO users (name, email) VALUES (:1, :2)", user)

#     products = [
#         ("Laptop", 1200.00),
#         ("Smartphone", 800.00),
#         ("Headphones", 150.00),
#         ("Monitor", 300.00),
#         ("Keyboard", 75.00),
#         ("Mouse", 50.00)
#     ]

#     for product in products:
#         cursor.execute("INSERT INTO products (name, price) VALUES (:1, :2)", product)

#     orders = [
#         (1, 1200.00, "2024-01-15"),
#         (2, 950.00, "2024-02-10"),
#         (1, 300.00, "2024-03-05"),
#         (3, 75.00, "2024-03-12"),
#         (4, 800.00, "2024-04-01"),
#         (5, 150.00, "2024-04-15"),
#         (2, 1300.00, "2024-05-01"),
#         (3, 50.00, "2024-06-10")
#     ]

#     for order in orders:
#         cursor.execute("""
#             INSERT INTO orders (user_id, amount, date)
#             VALUES (:1, :2, TO_DATE(:3, 'YYYY-MM-DD'))
#         """, order)

#     conn.commit()
#     cursor.close()
#     conn.close()
#     print("Sample data inserted.")

# init_tables()
# insert_data()

